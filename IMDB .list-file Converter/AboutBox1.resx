<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>